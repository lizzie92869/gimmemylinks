<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>Mylinks</title>
    <%= csrf_meta_tags %>

    <%= stylesheet_link_tag 'application', media: 'all' %>
  

    <%= javascript_include_tag 'application' %>

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Ubuntu+Mono" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <!--Import jQuery before materialize.js-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossorigin="anonymous">
    <!-- Matrialize CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css">
    <!-- Materialize Javascript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/js/materialize.min.js"></script>
    <!-- Materialize icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <!-- materialize for sidebar -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- handlebars -->
  <!--   <link href="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.11/handlebars.amd.min.js"> -->
  </head>

  <body>

 
    <% if flash[:alert] %>
  	<p class="alert-warning"><%= flash[:alert] %></p>
    <% end %>

    	<%= yield %>




    <script type="text/javascript" charset="utf-8">

$(function() {
    attachListeners();
});

function attachListeners() {
    $(".open-bar").on("click", openBar);     
    $(".js-list").on("click", displayLinksFromBars)
    $(".new-plus").on("click", openBar)
}



function openBar(e) {
    e.preventDefault();

    $.get("/lists.json", function(data) {     
        let htmlData = `
            <div class="js-big-nav"><div class = "colon-left leftSideBigNav darkGray lightGreyBackground">
            <div class="js-appendListName"><div class="right-align"><a href="#"><i class="close-bar material-icons darkGray">chevron_left</i></a></div>
            `+ listsNames(data) +`
            </div>
            </br>
            </br>
            <form action="/lists" method="post" class="js-newList" id="js-clearList"><input id="newListName" type="text" name="name" ><input type="submit">
            </form>
            </div>`
        $(".big-sidenav").html(htmlData)
        //we need to attach the listener from the opened bar (vs when the document is loaded and the chevron is not visible
        attachCloseBarListener() 
        attachJsListListener()
        attachNewListListener()
    });
    
}

function attachCloseBarListener() {
    $(".close-bar").on("click", closeBar);   
}

function closeBar(e){
    e.preventDefault();
    $(".big-sidenav").html(``)
    };


//rendering the list of lists in the big side bar
function listsNames(data){
let listNamesArray = []
    for (let i=0; i<data.length; i++) {
    listNamesArray.push(`<div class="valign-wrapper"><i class="material-icons rightMarginForIcons" style="color: ` + data[i]["color"] + `">brightness_1</i><a href="#" class="js-list" data-id=` + data[i]["id"] +`>` + data[i]["name"] + `</a></div>`)
    }
    //extract the string from the array and remove the commas to inject it as it
    listNamesString = listNamesArray.toString().replace(/,/g, "")
    return listNamesString 
}

function attachJsListListener(){
    $(".js-list").on("click", displayLinksFromBars);
}


function displayLinksFromBars(e) {
    e.preventDefault();
        //erase all data from that box before displaying a new serie of links
    $(".link").html(``)

    let listId = parseInt($(this).attr("data-id"))

    //render the info
    $.get("/lists.json", function(data) { 
        //render the filter heading
        $(".filter").html(`
        <div>
        </br>
        Sort by |
        <a href= "#"> higher priority</a> | 
        <a href= "#"> most recent</a> |  
        <a href= "#"> oldest</a> 

        <span class="delete_link"  > 
        <a href= "#"> Delete list!</a>
        </span>

        </div>
        `)

        //render the links
        //we want the links array for the data whose ["id"] == listId
        for (let j=0; j<data.length; j++){
            if (data[j]["id"] === listId){
                let dataStartingPath = data[j]["links"]
                let linksLength = data[j]["links"].length

                for (let i=0; i<linksLength; i++) {
                    let linkId = dataStartingPath[i]["id"]
                    let data_priority = dataStartingPath[i]["priority"] 
                    let d = new Date(dataStartingPath[i]["created_at"]);
                    let hrDate = (d.getMonth() + 1) + "-" + d.getDate() + "-" + d.getFullYear()
                    let showUrl = "/lists/"+listId+"/links/"+linkId
                   
                    $(".link").append(`
                        <div class="caption top-margin-show"> </br>
                            <div class="font"><a href=` + showUrl + ` data-id="`+ dataStartingPath[i]["id"] +`">` + dataStartingPath[i]["name"] + `<a>
                            <a href= "#"> <i class="small material-icons link-icons-gray push-right">delete</i></a>
                            <a href= "#"> <i id="flag-`+ linkId +`" class="small material-icons link-icons-gray push-right">assistant_photo</i></a>
                            <a href=` + showUrl + `> <i data-id="`+ linkId +`" class="small material-icons link-icons-gray push-right">edit</i></a>
                            <a href=` + showUrl + `> <i data-id="`+ linkId +`" class="small material-icons link-icons-gray push-right">visibility</i></a>
                            <a href= "` + dataStartingPath[i]["url"] + `"target= "blank"> <i class="small material-icons link-icons-gray push-right">link</i></a>
                            </div>
                        </div>       
                        <iframe src="` + dataStartingPath[i]["url"]  + `" style="border-color: ` + data["color"] +`;" class = "preview rounded iframe-placeholder" href=#>` + dataStartingPath[i]["url"] + `</iframe>
                        
                        <div class="link_date font>"></div>
                        <div class="link_date font>">` + hrDate + `</div>
                    `)
                    attachFlagListener(data_priority, linkId)         
                };
                $(".link").append(`<a list-id="`+ listId +`" user-id="`+ data[j]["user_id"] +`" class="plus" href=/lists/`+listId+`/links/new><i class="large material-icons">add_circle_outline</i></a>
                    </div>`) 
                // attachCreateLinkListener(e,listId, data[j]["user_id"])
                // attachShowEditLinkListener()

            }
        }    
    });
};


function attachNewListListener(){
    $("form.js-newList").submit(createNewList)
}

function createNewList(e){
    e.preventDefault();
    var values = {
        "authenticity_token": $('meta[name=csrf-token]').attr('content'),
        "list": {
            "name": $("#newListName").val()
    }};
    var posting = $.post('/lists', values, function(response){
        var list = response
        $(".js-appendListName").append(`<div class="valign-wrapper"><i class="material-icons rightMarginForIcons" style="color: ` + list["color"] + `">brightness_1</i><a href="#" class="js-list" data-id=` + list["id"] +`>` + list["name"] + `</a></div>`)
        $('#newListName').val("")
    });

}

function attachFlagListener(data_priority, linkId){
    $(".link").on("load", flagColor(data_priority, linkId));
}

function flagColor(data_priority, linkId){
    if (data_priority===1){
        $("#flag-"+linkId).addClass('red-text');
    }

    else if(data_priority===2){
         $("#flag-"+linkId).addClass('yellow-text');
    }
    else {
         $("#flag-"+linkId).addClass('white-text');
    }
}


   
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //reformating priority to be human readable
    // function hr_priority(data_priority){
    //     if (data_priority===1){
    //         return "High Priority"
    //     }
    //      else if(data_priority===2){
    //         return "Medium Priority"
    //     }
    //     else {
    //         return "Low Priority"
    //     }
    // }

        



</script>



  </body>
</html>
